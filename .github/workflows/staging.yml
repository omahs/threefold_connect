name: Staging

# Controls when the workflow will run
on:
  push:
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+' ]

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.lowercase }}
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: threefoldjimber/threefold_connect-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: image
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - name: Build and push
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: apps/web/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:staging-${{ github.sha }},${{ env.IMAGE_NAME }}:staging-latest
          labels: ${{ steps.meta.outputs.labels }}

  build_backend:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.lowercase }}
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: threefoldjimber/threefold_connect-backend

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: image
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - name: Build and push
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.GITHUB_USERNAME  }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:staging-${{ github.sha }},${{ env.IMAGE_NAME }}:staging-latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [ build_frontend, build_backend ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setting configs
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.STAGING_KUBE_KEY }} | base64 --decode > ${HOME}/.kube/jimber-staging.key
          echo ${{ secrets.STAGING_KUBE_CRT }} | base64 --decode > ${HOME}/.kube/jimber-staging.crt
          echo ${{ secrets.STAGING_KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
          echo $(ls ${HOME}/.kube)
      - name: Upgrade cluster
        run: |
          helm upgrade --install staging-login helm_charts -f helm_charts/values/values-staging.yaml --set global.FRONTEND_IMAGE=threefoldjimber/threefold_connect-frontend:staging-${{ github.sha }} --set global.BACKEND_IMAGE=threefoldjimber/threefold_connect-backend:staging-${{ github.sha }} --set global.FLAGSMITH_API_KEY="${{ secrets.STAGING_FLAGSMITH_API_KEY }}" --set global.DATABASE_URL="mysql://root:${{ secrets.STAGING_DATABASE_PASSWORD }}@staging-database:3306/staging-database?schema=public" --set global.DATABASE_PASSWORD="${{ secrets.STAGING_DATABASE_PASSWORD }}" -n jimber

